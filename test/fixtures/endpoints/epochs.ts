import { BlockFrostAPI } from '../../../src';

export default [
  {
    command: (SDK: BlockFrostAPI) => SDK.epochsLatest(),
    response: {
      epoch: expect.any(Number),
      start_time: expect.any(Number),
      end_time: expect.any(Number),
      first_block_time: expect.any(Number),
      last_block_time: expect.any(Number),
      block_count: expect.any(Number),
      tx_count: expect.any(Number),
      output: expect.any(String),
      fees: expect.any(String),
      active_stake: expect.any(String),
    },
  },
  {
    command: (SDK: BlockFrostAPI) => SDK.epochs(0),
    response: {
      epoch: 0,
      start_time: 1506203091,
      end_time: 1506635091,
      first_block_time: 1506203091,
      last_block_time: 1506635071,
      block_count: 21587,
      tx_count: 33,
      output: '10378568796482912',
      fees: '3458053',
      active_stake: null,
    },
  },
  {
    command: (SDK: BlockFrostAPI) => SDK.epochs(242),
    response: {
      epoch: 242,
      start_time: 1610747091,
      end_time: 1611179091,
      first_block_time: 1610747091,
      last_block_time: 1611179076,
      block_count: 21418,
      tx_count: 74057,
      output: '63148817438049616',
      fees: '16905060417',
      active_stake: '21755094259019945',
    },
  },
  {
    command: (SDK: BlockFrostAPI) => SDK.epochsStakes(242),
    response: expect.arrayContaining([
      expect.objectContaining({
        stake_address: expect.any(String),
        pool_id: expect.any(String),
        amount: expect.any(String),
      }),
    ]),
  },
  {
    command: (SDK: BlockFrostAPI) => SDK.epochsParameters(267),
    response: {
      min_fee_a: 44,
      min_fee_b: 155381,
      max_block_size: 65536,
      max_tx_size: 16384,
      max_block_header_size: 1100,
      key_deposit: '2000000',
      pool_deposit: '500000000',
      e_max: 18,
      n_opt: 500,
      a0: 0.3,
      rho: 0.003,
      tau: 0.2,
      decentralisation_param: 0,
      extra_entropy: null,
      protocol_major_ver: 4,
      protocol_minor_ver: 0,
      min_utxo: '1000000',
      min_pool_cost: '340000000',
      nonce: expect.any(String),
    },
  },
] as const;
